<style>
    .dropdown {
        margin-top: -85px;
    }

    button {
        padding: 0;
    }
</style>

@model ForumDigitalParadise.Models.Composite.CompositeViewForumModel
@inject Microsoft.AspNetCore.Identity.UserManager<ForumDigitalParadise.Data.Models.ApplicationUser> UserManager
    @inject ForumDigitalParadise.Data.IForumFollower ForumFollowerService

@{
    var currentUser = await UserManager.GetUserAsync(User);
    var currentUserId = currentUser?.Id;
    var isFollowing = await ForumFollowerService.IsFollowingForumAsync(currentUserId, Model.ForumTopicModel.Forum.Id);
    var memberCount = await ForumFollowerService.GetForumFollowersCountAsync(Model.ForumTopicModel.Forum.Id);
    var followerText = memberCount == 1 ? "Member" : "Members";
}


<div class="page-wrapper-topic">
    <div class="sectionHeader">
        <div class="sectionHeading">
            <div class="forumLogo">
                <img src="@Url.Content(Model.ForumTopicModel.Forum.ForumImageUrl)" alt="Forum Image" class="img-fluid rounded-circle" />
            </div>
            <span>@Model.ForumTopicModel.Forum.Name/paradise</span>
        </div>
    </div>
    <div class="post-container-home frontPageContent">
        <div class="post-item-container-Sorting">
            <hr class="forumTopic-header-hr">

            @if (Model.ForumTopicModel.Posts.Any())
            {
                @foreach (var post in Model.ForumTopicModel.Posts.Reverse())
                {
                    @if (!string.IsNullOrEmpty(post.PostImageUrl))
                    {
                        <div class="postItem-forum">
                            <div class="postInfo-forum">
                                <div class="authorImage">
                                    <img src="@Url.Content(post.AuthorImageUrl)" alt="Author Image" class="img-fluid rounded-circle" width="32" height="32">
                                </div>
                                @if (post.IsAuthorAdmin)
                                {
                                    <div class="authorName-IsAdmin">
                                        <a asp-controller="Profile" asp-action="Overview" asp-route-id="@post.AuthorId">
                                            <p>p/Admin</p>
                                            &nbsp; * &nbsp;
                                            <span data-timestamp="@post.Created"></span>
                                        </a>
                                    </div>
                                }
                                else
                                {
                                    <div class="authorName">
                                        <a asp-controller="Profile" asp-action="Overview" asp-route-id="@post.AuthorId">
                                            <p>u/@post.AuthorName</p>
                                            &nbsp; * &nbsp;
                                            <span data-timestamp="@post.Created"></span>
                                        </a>
                                    </div>
                                }
                            </div>
                            <a asp-controller="Post" asp-action="Index" asp-route-id="@post.Id" class="forum-link">
                                <div class="post-title-forum">
                                    <p>@post.Title</p>
                                </div>
                                <!-- Admin Delete Button -->
                                @if (User.Identity.Name == post.AuthorUserName || User.IsInRole("Admin"))
                                {
                                    <div class="dropdown">
                                        <button class="dropdown-btn-forum" type="button" aria-haspopup="true" aria-expanded="false">
                                            <ion-icon class="horizontal-forum-menu" name="ellipsis-horizontal-outline"></ion-icon>
                                        </button>
                                        <div class="dropdown-menu-forum" style="width: 150px;" aria-labelledby="dropdownMenuButton">
                                            <button type="button" class="dropdown-item-forum openPopup">
                                                <ion-icon name="trash" class="iconDelete-forum"></ion-icon> Delete Post
                                            </button>
                                            <button type="button" class="dropdown-item-forum editPost" data-url="@Url.Action("Edit", "Post", new { id = post.Id })">
                                                <ion-icon class="iconEdit-forum" name="color-wand-outline"></ion-icon> Edit Post
                                            </button>
                                        </div>
                                    </div>

                                    <div class="popup-show" style="display:none;">
                                        <div class="popup-content">
                                            <p>Are you sure you want to perform this action?</p>
                                            <span>This action will permanently remove the item and cannot be undone.</span>
                                            <div class="popup-content-buttons">
                                                <button type="button" class="cancelbtn-popup">Cancel</button>
                                                <form asp-controller="Post" asp-action="Delete" asp-route-id="@post.Id" method="post" class="delete-form">
                                                    <button type="submit" class="submitbtn-popup">Confirm</button>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                }
                                <div class="center-post-image">
                                    <div class="postImage-forum">
                                        <img src="@Url.Content(post.PostImageUrl)" alt="Post Image">
                                    </div>
                                </div>
                                <div class="postMeta-forum">
                                    <div class="postReplies-separated">
                                        <span class="like-section">
                                            <button class="like-button" data-post-id="@post.Id" aria-label="Like">
                                                <ion-icon name="heart-outline" class="icon-like"></ion-icon>
                                            </button>
                                            <span class="like-count" data-post-id="@post.Id">@post.LikesCount</span>
                                        </span>
                                        <span class="homeindex-replies">
                                            <ion-icon class="homeindex-repliesicon" name="chatbox-outline"></ion-icon>
                                            &nbsp;
                                            @post.RepliesCount
                                        </span>
                                        <span class="homeindex-view">
                                            <ion-icon class="homeindex-viewicon" name="eye-outline"></ion-icon>
                                            &nbsp;
                                            @post.Views
                                        </span>
                                    </div>
                                </div>
                            </a>
                        </div>
                       
                    }
                    else
                    {
                        <div class="postItem-forum">
                            <div class="postInfo-forum">
                                <div class="authorImage">
                                    <img src="@Url.Content(post.AuthorImageUrl)" alt="Author Image" class="img-fluid rounded-circle" width="32" height="32">
                                </div>
                                @if (post.IsAuthorAdmin)
                                {
                                    <div class="authorName-IsAdmin">
                                        <a asp-controller="Profile" asp-action="Overview" asp-route-id="@post.AuthorId">
                                            <p>p/Admin</p>
                                            &nbsp; * &nbsp;
                                            <span data-timestamp="@post.Created"></span>
                                        </a>
                                    </div>
                                }
                                else
                                {
                                    <div class="authorName">
                                        <a asp-controller="Profile" asp-action="Overview" asp-route-id="@post.AuthorId">
                                            <p>u/@post.AuthorName</p>
                                            &nbsp; * &nbsp;
                                            <span data-timestamp="@post.Created"></span>
                                        </a>
                                    </div>
                                }
                            </div>
                            <a asp-controller="Post" asp-action="Index" asp-route-id="@post.Id" class="forum-link">
                                <div class="post-title-forum">
                                    <p>@post.Title</p>
                                </div>
                                @if (User.Identity.Name == post.AuthorUserName || User.IsInRole("Admin"))
                                {
                                    <div class="dropdown">
                                        <button class="dropdown-btn-forum" type="button" aria-haspopup="true" aria-expanded="false">
                                            <ion-icon class="horizontal-forum-menu" name="ellipsis-horizontal-outline"></ion-icon>
                                        </button>
                                        <div class="dropdown-menu-forum" style="width: 150px;" aria-labelledby="dropdownMenuButton">
                                            <button type="button" class="dropdown-item-forum openPopup">
                                                <ion-icon name="trash" class="iconDelete-forum"></ion-icon> Delete Post
                                            </button>
                                            <button type="button" class="dropdown-item-forum editPost" data-url="@Url.Action("Edit", "Post", new { id = post.Id })">
                                                <ion-icon class="iconEdit-forum" name="color-wand-outline"></ion-icon> Edit Post
                                            </button>
                                        </div>
                                    </div>

                                    <div class="popup-show" style="display:none;">
                                        <div class="popup-content">
                                            <p>Are you sure you want to perform this action?</p>
                                            <span>This action will permanently remove the item and cannot be undone.</span>
                                            <div class="popup-content-buttons">
                                                <button type="button" class="cancelbtn-popup">Cancel</button>
                                                <form asp-controller="Post" asp-action="Delete" asp-route-id="@post.Id" method="post" class="delete-form">
                                                    <button type="submit" class="submitbtn-popup">Confirm</button>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                }
                                <div class="postPostContent-forum">
                                    <p>@post.PostContent</p>
                                </div>
                                <div class="postMeta-forum">
                                    <div class="postReplies-separated">
                                        <span class="like-section">
                                            <button class="like-button" data-post-id="@post.Id" aria-label="Like">
                                                <ion-icon name="heart-outline" class="icon-like"></ion-icon>
                                            </button>
                                            <span class="like-count" data-post-id="@post.Id">@post.LikesCount</span>
                                        </span>
                                        <span class="homeindex-replies">
                                            <ion-icon class="homeindex-repliesicon" name="chatbox-outline"></ion-icon>
                                            &nbsp;
                                            @post.RepliesCount
                                        </span>
                                        <span class="homeindex-view">
                                            <ion-icon class="homeindex-viewicon" name="eye-outline"></ion-icon>
                                            &nbsp;
                                            @post.Views
                                        </span>
                                    </div>
                                </div>
                            </a>
                        </div>
                    }
                    <hr class="forumTopic-header-hr">
                }
            }

            <div class="Postbtn-Topic">
                <div class="follow-unfollow-btns">
                    <a asp-controller="Post" asp-action="Create" asp-route-id="@Model.ForumTopicModel.Forum.Id">
                        <div class="create-post-btn">
                            <button type="button">
                                <ion-icon name="add-outline" class="create-post-icon"></ion-icon>
                                <span>Create a Post</span>
                            </button>
                        </div>
                    </a>

                    @if (User.Identity.IsAuthenticated)
                    {
                        <div id="followUnfollowSection">
                            @if (isFollowing)
                            {
                                <div id="followButton">
                                    <button type="button" class="btn-submitLeave"
                                            onclick="unfollowForum('@Model.ForumTopicModel.Forum.Id')">
                                        Joined
                                    </button>
                                </div>
                            }
                            else
                            {
                                <div id="followButton">
                                    <button type="button" class="btn-submitJoin"
                                            onclick="followForum('@Model.ForumTopicModel.Forum.Id')">
                                        Join Paradise
                                    </button>
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<aside>
    <div class="sidebar-forum-topic">
        <div class="center-sidebar-content">
            <div class="sidebar-forum-title">
                <p>@Model.ForumTopicModel.Forum.Name</p>
            </div>

            <div class="sidebar-forum-minidescription">
                <p>@Model.ForumTopicModel.Forum.MiniDescription</p>
            </div>

        </div>
        <hr style="width: 100%; max-width: 300px; height: 1px; color: white; background-color: #9aabe15c; border: none;">

        <div style="margin-top: 5px;">
            <div class="sidebar-forum-about">
                <p>ABOUT</p>
            </div>
            <div class="sidebar-forum-description">
                <p>@Model.ForumTopicModel.Forum.Description</p>
            </div>
        </div>
        <div class="members-forum">
            <p id="followerCount">@memberCount</p>
            <span>@followerText</span>
        </div>
        <hr style="width: 100%; max-width: 300px; height: 1px; color: white; background-color: #9aabe15c; border: none;">
        <div style="margin-top: 5px;">
            <div class="sidebar-forum-about">
                <p>BASIC RULES</p>
            </div>

            <div class="sidebar-forum-description">
                <p>Please keep posts friendly and on-topic.</p>
            </div>

            <div class="sidebar-forum-description">
                <p>
                    Please read the Paradise <a href="#">Guidelines</a> before creating a new post, if you break the
                    rules
                    an admin will take action
                </p>
            </div>
            <div class="sidebar-forum-description">
                @if (!Context.User.Identity.IsAuthenticated)
                {
                    <p>
                        You must be a <a asp-controller="Post" asp-action="Create"
                                         asp-route-id="@Model.ForumTopicModel.Forum.Id" class="registered-member-link">
                            registered
                            member
                        </a> to create a new post.
                    </p>
                }
            </div>
        </div>
    </div>
</aside>

<script>

    async function followForum(forumId) {
        const response = await fetch('/api/ForumFollowers/follow', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(forumId)
        });
        const result = await response.json();
        if (result.success) {
            await refreshFollowStatus(forumId);
        }
    }

    async function unfollowForum(forumId) {
        const response = await fetch('/api/ForumFollowers/unfollow', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(forumId)
        });
        const result = await response.json();
        if (result.success) {
            await refreshFollowStatus(forumId);
        }
    }

    async function refreshFollowStatus(forumId) {
        const response = await fetch('/api/ForumFollowers/isFollowing/' + forumId);
        const result = await response.json();
        const followButton = document.getElementById('followButton');
        const followerCount = document.getElementById('followerCount');
        if (result.isFollowing) {
            followButton.innerHTML = '<button type="button" class="btn-submitLeave" onclick="unfollowForum(\'' + forumId + '\')">Joined</button>';
            followerCount.innerText = parseInt(followerCount.innerText) + 1;
        } else {
            followButton.innerHTML = '<button type="button" class="btn-submitJoin" onclick="followForum(\'' + forumId + '\')">Join Paradise</button>';
            followerCount.innerText = parseInt(followerCount.innerText) - 1;
        }
    }

    document.addEventListener('DOMContentLoaded', function () {

        document.querySelectorAll('.like-button').forEach(button => {
            button.addEventListener('click', async function (event) {
                event.preventDefault();
                const postId = this.getAttribute('data-post-id');
                const likeCountSpan = document.querySelector(`.like-count[data-post-id="${postId}"]`);
                const icon = this.querySelector('.icon-like');

                const isLiked = icon.name === 'heart';

                const response = await fetch(`/api/postlike/${postId}/${isLiked ? 'unlike' : 'like'}`, {
                    method: 'POST'
                });

                if (response.ok) {
                    if (isLiked) {
                        icon.name = 'heart-outline';
                        likeCountSpan.textContent = parseInt(likeCountSpan.textContent) - 1;
                    } else {
                        icon.name = 'heart';
                        likeCountSpan.textContent = parseInt(likeCountSpan.textContent) + 1;
                    }
                }
            });
        });

        document.querySelectorAll('.like-count').forEach(async (span) => {
            const postId = span.getAttribute('data-post-id');
            const response = await fetch(`/api/postlike/${postId}/likes`);
            if (response.ok) {
                const count = await response.json();
                span.textContent = count;
            }

            const likeResponse = await fetch(`/api/postlike/${postId}/islikedbyuser`);
            if (likeResponse.ok) {
                const isLiked = await likeResponse.json();
                const likeButton = document.querySelector(`.like-button[data-post-id="${postId}"] .icon-like`);
                if (isLiked) {
                    likeButton.name = 'heart';
                } else {
                    likeButton.name = 'heart-outline';
                }
            }
        });


        document.querySelectorAll('.dropdown-btn-forum').forEach(function (dropdownBtn) {
            dropdownBtn.addEventListener('click', function (event) {
                event.stopPropagation();
                event.preventDefault();
                const dropdownMenu = this.nextElementSibling;
                toggleDropdown(dropdownMenu);
                closeOtherDropdowns(dropdownMenu);
            });
        });

        document.addEventListener('click', function (event) {
            document.querySelectorAll('.dropdown-menu-forum').forEach(function (dropdownMenu) {
                if (!dropdownMenu.previousElementSibling.contains(event.target) && !dropdownMenu.contains(event.target)) {
                    dropdownMenu.classList.remove('active');
                    dropdownMenu.style.display = 'none';
                }
            });
        });

        document.querySelectorAll('.editPost').forEach(function (button) {
            button.addEventListener('click', function (event) {
                event.preventDefault();
                window.location.href = this.getAttribute('data-url');
            });
        });

        // Open popup
        document.querySelectorAll(".openPopup").forEach(function (openButton) {
            openButton.addEventListener("click", function (event) {
                event.stopPropagation();
                event.preventDefault();
                const popup = this.closest('.postItem-forum').querySelector(".popup-show");
                const overlay = document.createElement("div");
                overlay.classList.add("popup-overlay");
                popup.style.display = "flex";
                popup.style.justifyContent = "center";
                popup.style.alignItems = "center";
                overlay.style.display = "block";
                document.body.appendChild(overlay);

                function hidePopup() {
                    popup.style.display = "none";
                    overlay.style.display = "none";
                    document.body.removeChild(overlay);
                }

                document.querySelectorAll(".cancelbtn-popup").forEach(function (cancelButton) {
                    cancelButton.addEventListener("click", function (cancelEvent) {
                        cancelEvent.preventDefault();
                        hidePopup();
                    });
                });

                overlay.addEventListener("click", function (event) {
                    if (event.target === overlay) {
                        hidePopup();
                    }
                });

                popup.addEventListener("click", function (event) {
                    event.stopPropagation();
                });
            });
        });

        function toggleDropdown(dropdownMenu) {
            dropdownMenu.classList.toggle('active');
            dropdownMenu.style.display = dropdownMenu.classList.contains('active') ? 'block' : 'none';
        }

        function closeOtherDropdowns(currentDropdown) {
            document.querySelectorAll('.dropdown-menu-forum').forEach(function (dropdownMenu) {
                if (dropdownMenu !== currentDropdown) {
                    dropdownMenu.classList.remove('active');
                    dropdownMenu.style.display = 'none';
                }
            });
        }
    });

    //time posted
    document.addEventListener("DOMContentLoaded", function () {
        function getTimeDifference(createdTime) {
            const now = new Date();
            const diffMs = now - new Date(createdTime);
            const diffMins = Math.floor(diffMs / 60000);
            const diffHours = Math.floor(diffMins / 60);
            const diffDays = Math.floor(diffHours / 24);
            const diffMonths = Math.floor(diffDays / 30);

            if (diffMins < 1) {
                return 'just now';
            } else if (diffMins < 60) {
                return diffMins + ' min. ago';
            } else if (diffHours < 24) {
                return diffHours + ' hr. ago';
            } else if (diffDays < 30) {
                return diffDays + ' day' + (diffDays > 1 ? 's' : '') + ' ago';
            } else {
                return diffMonths + ' mo.' + (diffMonths > 1 ? 's' : '') + ' ago';
            }
        }

        document.querySelectorAll('.authorName span').forEach(function (span) {
            const timestamp = span.getAttribute('data-timestamp');
            if (timestamp) {
                span.textContent = 'posted ' + getTimeDifference(timestamp);
            }
        });
    });

    //time posted
    document.addEventListener("DOMContentLoaded", function () {
        function getTimeDifference(createdTime) {
            const now = new Date();
            const diffMs = now - new Date(createdTime);
            const diffMins = Math.floor(diffMs / 60000);
            const diffHours = Math.floor(diffMins / 60);
            const diffDays = Math.floor(diffHours / 24);
            const diffMonths = Math.floor(diffDays / 30);

            if (diffMins < 1) {
                return 'just now';
            } else if (diffMins < 60) {
                return diffMins + ' min. ago';
            } else if (diffHours < 24) {
                return diffHours + ' hr. ago';
            } else if (diffDays < 30) {
                return diffDays + ' day' + (diffDays > 1 ? 's' : '') + ' ago';
            } else {
                return diffMonths + ' mo.' + (diffMonths > 1 ? 's' : '') + ' ago';
            }
        }

        document.querySelectorAll('.authorName-IsAdmin span').forEach(function (span) {
            const timestamp = span.getAttribute('data-timestamp');
            if (timestamp) {
                span.textContent = 'posted ' + getTimeDifference(timestamp);
            }
        });
    });

    function clearThis(target) {
        target.value = "";
    }
</script>