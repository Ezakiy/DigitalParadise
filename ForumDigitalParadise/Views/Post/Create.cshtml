@model ForumDigitalParadise.Models.Post.NewPostModel

<div class="section">
    <div class="container-post-submit">
        <div class="return-icon-fixed" onclick="goBack()">
            <div class="headingBtn">
                <ion-icon name="arrow-back-outline" class="go-back-icon"></ion-icon>
            </div>
        </div>

        <div class="forumtitle-left">
            <span style="font-size: 20px; color:white;">Create a Post | @Model.ForumName</span>
        </div>
        <form asp-action="AddPost" method="post" enctype="multipart/form-data" id="addPostForm">
            <div class="title">
                <div class="placeholder-container">
                    
                    <input type="text" name="Title" id="titleInput" placeholder="" maxlength="150" autocomplete="off">
                    <label for="titleInput" class="placeholder">Title <span class="required-indicator">*</span></label>
                </div>
                <ion-icon class="warning-indicator" id="titleWarningIndicator" name="alert-circle-outline"></ion-icon>
                <ion-icon class="check-indicator" id="titleCheckIndicator" name="checkmark-outline"></ion-icon>
            </div>
            <div class="title-right-side">
                <span id="charCount">0/150</span>
            </div>
            <div class="title-left-side">
                <span class="required-text">Please fill out this field.</span>
            </div>

            <div class="row-postcreate">
                <div class="col">
                    <div class="first box">
                        <button type="button" onclick="f2(this)" class="bold-icon">
                            <i class="fa-solid fa-bold" style="font-size:14px;"></i>
                        </button>
                    </div>
                    <div class="second box">
                        <button class="dropdown-btn-post" type="button">
                            <i class="fa-solid fa-ellipsis"></i>
                        </button>
                        <div class="dropdown-menu-image" id="dropdownMenuImage">
                            <ul>
                                <li>
                                    <ion-icon class="image-icon" name="image-outline"></ion-icon>
                                    <label class="btn-file">
                                        Image <input type="file" name="file" style="display:none" id="fileInput" accept=".png, .jpg, .jpeg" onchange="displayImageContent(this)">
                                    </label>
                                    <span id="fileName"></span>
                                </li>
                            </ul>
                        </div>
                    </div>

                    <textarea asp-for="Content" id="textarea" placeholder="Body" required maxlength="750"></textarea>
                    <div class="image-preview-container" style="display: none; border-radius: 20px; width: 600px; height: 275px;">
                        <div class="icon-remove-image-div">
                            <ion-icon class="icon-remove-image" name="close-outline" onclick="removeImage()"></ion-icon>
                        </div>
                        <img id="imagePreview" style="width: 100%; height: 100%;" />
                    </div>
                </div>
            </div>

            <input asp-for="ForumId" type="hidden" />

            <div class="submitbtn">
                <button type="button" id="cancelPostBtn" class="btn-submitCancel" onclick="clearFields()">Cancel</button>
                <button type="submit" id="submitPostBtn" class="btn-submitPost" disabled>Post</button>
            </div>
        </form>

    </div>
</div>

<script>

    function displayImageContent(input) {
        const file = input.files[0];
        const fileName = document.getElementById('fileName');
        const validExtensions = ['image/jpeg', 'image/png'];

        if (file) {
            if (!validExtensions.includes(file.type)) {
                alert('Please select a valid image file (PNG or JPG).');
                input.value = '';
                fileName.textContent = ''; 
            } else {
                fileName.textContent = file.name;
            }
        }
    }


    function goBack() {
        window.history.back();
    }

    const imageDropdownBtn = document.querySelector('.dropdown-btn-post');
    const imageDropdownMenu = document.getElementById("dropdownMenuImage");

    imageDropdownBtn.addEventListener('click', (event) => {
        imageDropdownMenu.classList.toggle('active');
        imageDropdownBtn.classList.toggle('focused');
        event.stopPropagation();
    });

    document.body.addEventListener('click', (event) => {
        if (!imageDropdownMenu.contains(event.target) && !imageDropdownBtn.contains(event.target)) {
            imageDropdownMenu.classList.remove('active');
            imageDropdownBtn.classList.remove('focused');
        }
    });

    function hideImageDropdownMenu() {
        const imageDropdownMenu = document.getElementById("dropdownMenuImage");
        const imageDropdownBtn = document.querySelector('.dropdown-btn-post');

        imageDropdownMenu.classList.remove('active');
        imageDropdownBtn.classList.remove('focused');
    }

    document.getElementById("fileInput").addEventListener("change", function () {
        displayImageContent(this);
        hideImageDropdownMenu();
    });

    function displayImageContent(input) {
        const imagePreviewContainer = document.querySelector('.image-preview-container');
        const imagePreview = document.getElementById('imagePreview');

        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                imagePreview.setAttribute('src', e.target.result);
                imagePreviewContainer.style.display = 'block';
                checkFieldsNotEmpty();
            }

            reader.readAsDataURL(input.files[0]);
        }
    }

    document.getElementById("fileInput").addEventListener("change", function () {
        displayImageContent(this);
        hideImageDropdownMenu();
    });

    function clearFields() {
        document.getElementById("addPostForm").reset();
        document.querySelector('.image-preview-container').style.display = 'none';
        document.getElementById('imagePreview').removeAttribute('src');
        document.getElementById('submitPostBtn').disabled = true;
        resetCharCount();
    }

    function checkFieldsNotEmpty() {
        const titleInput = document.getElementById('titleInput').value.trim();
        const contentTextarea = document.getElementById('textarea').value.trim();
        const submitPostBtn = document.getElementById('submitPostBtn');

        if (titleInput !== "" && contentTextarea !== "") {
            submitPostBtn.disabled = false;
        } else {
            submitPostBtn.disabled = true;
        }
    }

    function capitalizeFirstLetter(text) {
        if (text.length === 0) return text;
        return text.charAt(0).toUpperCase() + text.slice(1);
    }

    document.getElementById('titleInput').addEventListener('input', function () {
        let titleInput = document.getElementById('titleInput');
        let capitalizedValue = capitalizeFirstLetter(titleInput.value);
        titleInput.value = capitalizedValue;

        const charCountSpan = document.getElementById('charCount');
        charCountSpan.textContent = `${titleInput.value.length}/150`;

        checkFieldsNotEmpty();
    });

    document.getElementById('textarea').addEventListener('input', checkFieldsNotEmpty);

    function removeImage() {
        document.getElementById('fileInput').value = '';
        document.querySelector('.image-preview-container').style.display = 'none';
        document.getElementById('imagePreview').removeAttribute('src');
    }

    function resetCharCount() {
        const charCountSpan = document.getElementById('charCount');
        charCountSpan.textContent = '0/150';
    }
</script>