<style>
    .dropdown {
        margin-top: -70px;
    }

    button {
        padding: 0;
    }
</style>

@model ForumDigitalParadise.Models.Search.SearchResultModel

<main style="margin-top: 0;">
    <div class="center-content page-wrapper">
        <div class="container body-content">
            <div class="frontPage-position">
                <div class="frontPageLearn">
                    <span id="results" style="color:White; font-size: 16px;">Search Results for: @Model.SearchQuery</span>
                </div>
            </div>
            <div class="buttons-aligning">
                <div class="toggle-buttons">
                    <button id="postsButton" class="active" onclick="toggleView('posts')">Posts</button>
                    <button id="communitiesButton" onclick="toggleView('communities')">Paradises</button>
                </div>
            </div>
            <div class="frontPageContent post-container-home">
                <hr class="responsive-hr"
                    style="width: 100%; max-width: 1666px; height: 1px; color: white; background-color: #9aabe15c; border: none;">
                <div class="post-item-container-Sorting">
                    <div class="post-subtitle-index-container">
                        <div class="post-subtitle-index">
                            <div class="custom-select">
                                <div class="select-selected">
                                    @ViewBag.SortBy
                                    <ion-icon class="down-carrot-sort" name="chevron-down-outline"></ion-icon>
                                </div>
                                <div class="select-items select-hide">
                                    <div>Best</div>
                                    <div>Views</div>
                                    <div>Replies</div>
                                    <div>Likes</div>
                                    <div>Recent</div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <hr style="width: 100%; max-width: 725px; height: 1px; color: white; background-color: #9aabe15c; border: none;">
                    <div id="postsSection">
                    @if (!Model.EmptySearchResults)
                    { @foreach (var post in Model.Posts)
                        { @if (!string.IsNullOrEmpty(post.PostImageUrl))
                            {
                                <div class="postItem">
                                    <a asp-controller="Post" asp-action="Index" asp-route-id="@post.Id" class="profile-post-link">
                                        <div class="profile-content-margin">
                                            <div class="profile-header-searchResults">
                                                <div class="authorImage">
                                                    <img src="@Url.Content(post.AuthorImageUrl)" alt="Profile Image" />
                                                </div>
                                                @if (post.IsAuthorAdmin)
                                                {
                                                    <div class="authorName-IsAdmin">
                                                        <a asp-controller="Profile" asp-action="Overview" asp-route-id="@post.AuthorId">
                                                            <p>p/Admin</p>
                                                            &nbsp; * &nbsp;
                                                            <span data-timestamp="@post.Created"></span>
                                                        </a>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="authorName">
                                                        <a asp-controller="Profile" asp-action="Overview" asp-route-id="@post.AuthorId">
                                                            <p>@post.AuthorName</p>
                                                            &nbsp; * &nbsp;
                                                            <span data-timestamp="@post.Created"></span>
                                                        </a>
                                                    </div>
                                                }                                               
                                            </div>
                                            <div class="post-body">
                                                <div class="post-text">
                                                    <div class="post-title-profile">
                                                        <p>@post.Title</p>
                                                    </div>
                                                    <div class="post-content-profile">
                                                        <p>@post.PostContent</p>
                                                    </div>
                                                </div>
                                                <div class="post-image-content">
                                                    <img src="@Url.Content(post.PostImageUrl)" alt="Post Image" />
                                                </div>
                                                  
                                            </div>
                                                <div class="postMetaResults-profile">
                                                    <div class="postMetaResults-separated">
                                                        <span class="results-likes">
                                                            <span class="like-count" data-post-id="@post.Id">@post.LikesCount </span>
                                                            likes
                                                        </span>
                                                        &nbsp;
                                                        .
                                                        &nbsp;
                                                        <span class="results-replies">
                                                            @post.RepliesCount comments
                                                        </span>
                                                        &nbsp;
                                                        .
                                                        &nbsp;
                                                        <span class="results-views">
                                                            @post.Views views
                                                        </span>
                                                    </div>
                                                </div>
                                        </div>
                                    </a>
                                </div>

                            }
                            else
                            {
                                <div class="postItem">
                                    <div class="postInfo-Index">
                                        <div class="authorImage">
                                            <img src="@Url.Content(post.AuthorImageUrl)" alt="Author Image"
                                                 class="img-fluid rounded-circle" width="32" height="32">
                                        </div>
                                        @if (post.IsAuthorAdmin)
                                        {
                                            <div class="authorName-IsAdmin">
                                                <a asp-controller="Profile" asp-action="Overview" asp-route-id="@post.AuthorId">
                                                    <p>p/Admin</p>
                                                    &nbsp; * &nbsp;
                                                    <span data-timestamp="@post.Created"></span>
                                                </a>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="authorName">
                                                <a asp-controller="Profile" asp-action="Overview" asp-route-id="@post.AuthorId">
                                                    <p>u/@post.AuthorName</p>
                                                    &nbsp; * &nbsp;
                                                    <span data-timestamp="@post.Created"></span>
                                                </a>
                                            </div>
                                        }
                                    </div>
                                    <a asp-controller="Post" asp-action="Index" asp-route-id="@post.Id" class="forum-link">
                                        <div class="noImage-home-details">
                                            <div class="post-title-link-noimage">
                                                <p>@post.Title</p>
                                            </div>                                      
                                                <div class="postMetaResults-profile">
                                                    <div class="postMetaResults-separated">
                                                        <span class="results-likes">
                                                            <span class="like-count" data-post-id="@post.Id">@post.LikesCount </span>
                                                            likes
                                                        </span>
                                                        &nbsp;
                                                        .
                                                        &nbsp;
                                                        <span class="results-replies">
                                                            @post.RepliesCount comments
                                                        </span>
                                                        &nbsp;
                                                        .
                                                        &nbsp;
                                                        <span class="results-views">
                                                            @post.Views views
                                                        </span>
                                                    </div>
                                                </div>
                                        </div>                                           
                                    </a>
                                </div>
                            }
                            <hr style="width: 100%; max-width: 725px; height: 1px; color: white; background-color: #9aabe15c; border: none;">
                        }
                    }
                    else
                    {
                        <div class="noPosts">
                            <h3>
                                No search results found for @Model.SearchQuery<br />
                            </h3>
                        </div>
                    }
                    </div>

                        <div class="frontPageContent-forum" id="communitiesSection" style="display: none;">
                            @foreach (var forum in Model.Forums)
                            {
                                <a asp-controller="Forum" asp-action="Topic" asp-route-id="@forum.Id" class="forum-link">
                                    <div class="forum-item-results">
                                        <div class="forum-content-wrapper">
                                            <div class="forum-image-results">
                                                <img src="@Url.Content(forum.ForumImageUrl)" alt="Forum Image" class="img-fluid rounded-circle">
                                            </div>
                                            <div class="forum-results-wrapper">
                                                    <div class="forum-title-results">
                                                        p/@forum.Name
                                                    </div>

                                                <div class="forum-members-results">
                                                    @forum.MembersCount Members
                                                </div>
                                                    <div class="forum-description-results">
                                                        @forum.Description
                                                    </div>
                                            </div>
                                        </div>
                                    </div>
                                </a>
                                <hr style="width: 100%; max-width: 750px; height: 1px; color: white; background-color: #9aabe15c; border: none;">
                            }
                        </div>                      
                    </div>

                </div>
            </div>
        </div>
    </div>
</main>
@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const postsButton = document.getElementById("postsButton");
            const communitiesButton = document.getElementById("communitiesButton");
            const postsSection = document.getElementById("postsSection");
            const communitiesSection = document.getElementById("communitiesSection");

            function toggleView(view) {
                if (view === 'posts') {
                    postsSection.style.display = 'block';
                    communitiesSection.style.display = 'none';
                    postsButton.classList.add('active');
                    communitiesButton.classList.remove('active');
                } else if (view === 'communities') {
                    postsSection.style.display = 'none';
                    communitiesSection.style.display = 'block';
                    postsButton.classList.remove('active');
                    communitiesButton.classList.add('active');
                }
            }

            window.toggleView = toggleView; 

            toggleView('posts');
        });


        document.addEventListener("DOMContentLoaded", function () {
            var customSelects = document.getElementsByClassName("custom-select");

            function closeAllSelect(except) {
                var selected = document.getElementsByClassName("select-selected");
                for (var i = 0; i < selected.length; i++) {
                    if (except !== selected[i]) {
                        selected[i].classList.remove("active");
                        selected[i].nextElementSibling.classList.add("select-hide");
                    }
                }
            }

            for (var i = 0; i < customSelects.length; i++) {
                var selected = customSelects[i].getElementsByClassName("select-selected")[0];
                var items = customSelects[i].getElementsByClassName("select-items")[0];

                selected.addEventListener("click", function (e) {
                    e.stopPropagation();
                    closeAllSelect(this);
                    this.classList.toggle("active");
                    this.nextElementSibling.classList.toggle("select-hide");
                });

                var options = items.getElementsByTagName("div");
                for (var j = 0; j < options.length; j++) {
                    options[j].addEventListener("click", function (e) {
                        var selectedOption = this.innerHTML;
                        selected.innerHTML = selectedOption;
                        selected.classList.remove("active");
                        this.parentNode.classList.add("select-hide");
                        sortPosts(selectedOption);
                    });
                }
            }

            document.addEventListener("click", closeAllSelect);

            function sortPosts(selectedValue) {
                var searchQuery = '@ViewBag.SearchQuery'; 
                window.location.href = '/Search/Results?searchQuery=' + encodeURIComponent(searchQuery) + '&sortBy=' + selectedValue;
            }
        });


        document.addEventListener("DOMContentLoaded", function () {

            document.querySelectorAll('.like-button').forEach(button => {
                button.addEventListener('click', async function (event) {
                    event.preventDefault();
                    const postId = this.getAttribute('data-post-id');
                    const likeCountSpan = document.querySelector(`.like-count[data-post-id="${postId}"]`);
                    const icon = this.querySelector('.icon-like');

                    const isLiked = icon.name === 'heart';

                    const response = await fetch(`/api/postlike/${postId}/${isLiked ? 'unlike' : 'like'}`, {
                        method: 'POST'
                    });

                    if (response.ok) {
                        if (isLiked) {
                            icon.name = 'heart-outline';
                            likeCountSpan.textContent = parseInt(likeCountSpan.textContent) - 1;
                        } else {
                            icon.name = 'heart';
                            likeCountSpan.textContent = parseInt(likeCountSpan.textContent) + 1;
                        }
                    }
                });
            });

            document.querySelectorAll('.like-count').forEach(async (span) => {
                const postId = span.getAttribute('data-post-id');
                const response = await fetch(`/api/postlike/${postId}/likes`);
                if (response.ok) {
                    const count = await response.json();
                    span.textContent = count;
                }

                const likeResponse = await fetch(`/api/postlike/${postId}/islikedbyuser`);
                if (likeResponse.ok) {
                    const isLiked = await likeResponse.json();
                    const likeButton = document.querySelector(`.like-button[data-post-id="${postId}"] .icon-like`);
                    if (isLiked) {
                        likeButton.name = 'heart';
                    } else {
                        likeButton.name = 'heart-outline';
                    }
                }
            });

            function openPopup(popup) {
                const overlay = document.createElement("div");
                overlay.classList.add("popup-overlay");
                popup.style.display = "flex";
                popup.style.justifyContent = "center";
                popup.style.alignItems = "center";
                overlay.style.display = "block";
                document.body.appendChild(overlay);

                function hidePopup() {
                    popup.style.display = "none";
                    overlay.style.display = "none";
                    document.body.removeChild(overlay);
                }

                document.querySelectorAll(".cancelbtn-popup").forEach(function (cancelButton) {
                    cancelButton.addEventListener("click", function (cancelEvent) {
                        cancelEvent.preventDefault();
                        hidePopup();
                    });
                });

                overlay.addEventListener("click", function (event) {
                    if (event.target === overlay) {
                        hidePopup();
                    }
                });

                popup.addEventListener("click", function (event) {
                    event.stopPropagation();
                });
            }

            document.querySelectorAll(".openPopup").forEach(function (openButton) {
                openButton.addEventListener("click", function (event) {
                    event.stopPropagation();
                    event.preventDefault();
                    const popup = this.closest('.postItem').querySelector(".popup-show");
                    openPopup(popup);
                });
            });

            function toggleDropdown(dropdownMenu) {
                dropdownMenu.classList.toggle('active');
                dropdownMenu.style.display = dropdownMenu.classList.contains('active') ? 'block' : 'none';
            }

            function closeOtherDropdowns(currentDropdown) {
                document.querySelectorAll('.dropdown-menu-forum').forEach(function (dropdownMenu) {
                    if (dropdownMenu !== currentDropdown) {
                        dropdownMenu.classList.remove('active');
                        dropdownMenu.style.display = 'none';
                    }
                });
            }

            document.querySelectorAll('.dropdown-btn-forum, .dropdown-btn-searchResults').forEach(function (dropdownBtn) {
                dropdownBtn.addEventListener('click', function (event) {
                    event.stopPropagation();
                    event.preventDefault();
                    const dropdownMenu = this.nextElementSibling;
                    toggleDropdown(dropdownMenu);
                    closeOtherDropdowns(dropdownMenu);
                });
            });

            document.addEventListener('click', function (event) {
                document.querySelectorAll('.dropdown-menu-forum').forEach(function (dropdownMenu) {
                    if (!dropdownMenu.previousElementSibling.contains(event.target) && !dropdownMenu.contains(event.target)) {
                        dropdownMenu.classList.remove('active');
                        dropdownMenu.style.display = 'none';
                    }
                });
            });

            document.querySelectorAll('.editPost').forEach(function (button) {
                button.addEventListener('click', function (event) {
                    event.preventDefault();
                    window.location.href = this.getAttribute('data-url');
                });
            });

            function getTimeDifference(createdTime) {
                const now = new Date();
                const diffMs = now - new Date(createdTime);
                const diffMins = Math.floor(diffMs / 60000);
                const diffHours = Math.floor(diffMins / 60);
                const diffDays = Math.floor(diffHours / 24);
                const diffMonths = Math.floor(diffDays / 30);

                if (diffMins < 1) {
                    return 'just now';
                } else if (diffMins < 60) {
                    return diffMins + ' min. ago';
                } else if (diffHours < 24) {
                    return diffHours + ' hr. ago';
                } else if (diffDays < 30) {
                    return diffDays + ' day' + (diffDays > 1 ? 's' : '') + ' ago';
                } else {
                    return diffMonths + ' mo.' + (diffMonths > 1 ? '' : '') + ' ago';
                }
            }

            document.querySelectorAll('.authorName span').forEach(function (span) {
                const timestamp = span.getAttribute('data-timestamp');
                if (timestamp) {
                    span.textContent = 'posted ' + getTimeDifference(timestamp);
                }
            });

            document.querySelectorAll('.authorName-IsAdmin span').forEach(function (span) {
                const timestamp = span.getAttribute('data-timestamp');
                if (timestamp) {
                    span.textContent = 'posted ' + getTimeDifference(timestamp);
                }
            });
        });

        function clearThis(target) {
            target.value = "";
        }
    </script>
}